/*
 * This file is generated by jOOQ.
*/
package com.youbc.generated.schema.tables;


import com.youbc.generated.schema.Keys;
import com.youbc.generated.schema.PokeYouBc;
import com.youbc.generated.schema.tables.records.UserProfileRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserProfile extends TableImpl<UserProfileRecord> {

    private static final long serialVersionUID = -1051832090;

    /**
     * The reference instance of <code>poke_you_bc.user_profile</code>
     */
    public static final UserProfile USER_PROFILE = new UserProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserProfileRecord> getRecordType() {
        return UserProfileRecord.class;
    }

    /**
     * The column <code>poke_you_bc.user_profile.user_id</code>.
     */
    public final TableField<UserProfileRecord, String> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

    /**
     * The column <code>poke_you_bc.user_profile.age</code>.
     */
    public final TableField<UserProfileRecord, Integer> AGE = createField("age", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>poke_you_bc.user_profile.sex</code>.
     */
    public final TableField<UserProfileRecord, Integer> SEX = createField("sex", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>poke_you_bc.user_profile.wechatId</code>.
     */
    public final TableField<UserProfileRecord, String> WECHATID = createField("wechatId", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * The column <code>poke_you_bc.user_profile.username</code>.
     */
    public final TableField<UserProfileRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>poke_you_bc.user_profile.horoscope</code>.
     */
    public final TableField<UserProfileRecord, String> HOROSCOPE = createField("horoscope", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>poke_you_bc.user_profile.matchCount</code>.
     */
    public final TableField<UserProfileRecord, Integer> MATCHCOUNT = createField("matchCount", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>poke_you_bc.user_profile.time_created</code>.
     */
    public final TableField<UserProfileRecord, Timestamp> TIME_CREATED = createField("time_created", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>poke_you_bc.user_profile</code> table reference
     */
    public UserProfile() {
        this("user_profile", null);
    }

    /**
     * Create an aliased <code>poke_you_bc.user_profile</code> table reference
     */
    public UserProfile(String alias) {
        this(alias, USER_PROFILE);
    }

    private UserProfile(String alias, Table<UserProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserProfile(String alias, Table<UserProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PokeYouBc.POKE_YOU_BC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserProfileRecord> getPrimaryKey() {
        return Keys.KEY_USER_PROFILE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserProfileRecord>> getKeys() {
        return Arrays.<UniqueKey<UserProfileRecord>>asList(Keys.KEY_USER_PROFILE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UserProfileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserProfileRecord, ?>>asList(Keys.USER_PROFILE_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserProfile as(String alias) {
        return new UserProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserProfile rename(String name) {
        return new UserProfile(name, null);
    }
}
