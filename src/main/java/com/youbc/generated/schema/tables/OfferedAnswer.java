/*
 * This file is generated by jOOQ.
*/
package com.youbc.generated.schema.tables;


import com.youbc.generated.schema.Keys;
import com.youbc.generated.schema.PokeYouBc;
import com.youbc.generated.schema.tables.records.OfferedAnswerRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OfferedAnswer extends TableImpl<OfferedAnswerRecord> {

    private static final long serialVersionUID = -1968563808;

    /**
     * The reference instance of <code>poke_you_bc.offered_answer</code>
     */
    public static final OfferedAnswer OFFERED_ANSWER = new OfferedAnswer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OfferedAnswerRecord> getRecordType() {
        return OfferedAnswerRecord.class;
    }

    /**
     * The column <code>poke_you_bc.offered_answer.offered_answer_id</code>.
     */
    public final TableField<OfferedAnswerRecord, Integer> OFFERED_ANSWER_ID = createField("offered_answer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>poke_you_bc.offered_answer.answer_content</code>.
     */
    public final TableField<OfferedAnswerRecord, String> ANSWER_CONTENT = createField("answer_content", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * Create a <code>poke_you_bc.offered_answer</code> table reference
     */
    public OfferedAnswer() {
        this("offered_answer", null);
    }

    /**
     * Create an aliased <code>poke_you_bc.offered_answer</code> table reference
     */
    public OfferedAnswer(String alias) {
        this(alias, OFFERED_ANSWER);
    }

    private OfferedAnswer(String alias, Table<OfferedAnswerRecord> aliased) {
        this(alias, aliased, null);
    }

    private OfferedAnswer(String alias, Table<OfferedAnswerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return PokeYouBc.POKE_YOU_BC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OfferedAnswerRecord> getPrimaryKey() {
        return Keys.KEY_OFFERED_ANSWER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OfferedAnswerRecord>> getKeys() {
        return Arrays.<UniqueKey<OfferedAnswerRecord>>asList(Keys.KEY_OFFERED_ANSWER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OfferedAnswer as(String alias) {
        return new OfferedAnswer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OfferedAnswer rename(String name) {
        return new OfferedAnswer(name, null);
    }
}
